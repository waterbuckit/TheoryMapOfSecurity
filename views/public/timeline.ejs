<!DOCTYPE html>
<html>
  <head>
    <script src="jquery-3.3.1.min.js"></script>
    <script src="http://d3js.org/d3.v5.min.js"></script>
    <style>
         .wrapper {
             height: 100%;
             margin: 0 -10px;
             display: flex;  
             flex-flow: row wrap;
             font-weight: bold;
             text-align: center;
         }
           
         .wrapper > * {
             padding: 10px;
             flex: 1 100%;
         }
           
         .main {
             text-align: left;
             background: deepskyblue;
         }
           
         .aside-1 {
             margin: 0 10px;
             box-shadow:5px 1px 6px #4E565E;
             background: gold;
         }
           
         .aside-2 {
             margin: 0 10px;
             width: 100px;
             box-shadow:-5px 1px 6px #4E565E;
             background: hotpink;
         }
           
         @media all and (min-width: 600px) {
             .aside { flex: 1 auto; }
         }
           
         @media all and (min-width: 800px) {
             .main    { flex: 3 0px; }
             .aside-1 { order: 1; } 
             .main    { order: 2; }
             .aside-2 { order: 3; }
         }
         body,html {
             background: deepskyblue;
             max-width: 100%;
             overflow-x: hidden;
             overflow-y: hidden;
             height:100%;
             margin: 0;
         }
         .timelineContainer {
             width:100%;
             height:95%;
         }
       
         .timeline rect {
             fill: steelblue;
         }

         .timeline text {
             fill: white;
             font: 10px sans-serif;
             text-anchor: end;
         }

        .theoryInfoDiv {
            height: 90%;
            max-height: 90%;
            overflow-y: scroll;
            overflow-x: hidden;
        }
        .collapsibleTheoryInfo {
             background-color: #777;
             color: white;
             cursor: pointer;
             padding: 18px;
             width: 100%;
             border: none;
             text-align: left;
             outline: none;
             font-size: 15px;
        } 
        .collapsibleTheoryKeywords {
             background-color: #777;
             color: white;
             cursor: pointer;
             padding: 18px;
             width: 100%;
             border: none;
             text-align: left;
             outline: none;
             font-size: 15px;
        } 
        .active, .collapsibleTheoryKeywords:hover {
             background-color: #555;
        }

        .active, .collapsibleTheoryInfo:hover {
             background-color: #555;
        }
        .collapsibleContent {
             padding: 0 18px;
             text-align: left;
             overflow: hidden;
             background-color: #f1f1f1;
             max-height: 0;
             transition: max-height 0.2s ease-out;
        }

        ::-webkit-scrollbar {
            width: 7px;
        }       
        ::-webkit-scrollbar-track {
            -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3); 
            -webkit-border-radius: 10px;
             border-radius: 10px;
        }
        ::-webkit-scrollbar-thumb {
            -webkit-border-radius: 10px;
            border-radius: 10px;
            background: #1EB980;
        }
    </style>
  </head>
  <body>
      <div class="wrapper">
           <article class="main">
               Timeline
               <div id="timelineContainer" class="timelineContainer">
               </div>
           </article>
           <aside class="aside aside-1">
               Aside 1
           </aside>
           <aside class="aside aside-2">
               <div style="height:90%;">
                   Theory Information
                   <h2 id="theoryName"></h2> 
                   <div class="theoryInfoDiv">
                        <button class="collapsibleTheoryInfo">Summary</button>
                        <div class="collapsibleContent">
                            <p id="theorySummary"></p>
                        </div>
                        <button class="collapsibleTheoryInfo">Principles</button>
                        <div class="collapsibleContent">
                            <p id="theoryPrinciples"></p>
                        </div>
                        <button class="collapsibleTheoryInfo">Example</button>
                        <div class="collapsibleContent">
                            <p id="theoryExample"></p>
                        </div>
                        <button class="collapsibleTheoryInfo">Structure of international system</button>
                        <div class="collapsibleContent">
                            <p id="theoryStructureOfTheInternationalSystem"></p>
                        </div>
                        <button class="collapsibleTheoryInfo">Relation of system to environment</button>
                        <div class="collapsibleContent">
                            <p id="theoryRelationOfSystemToEnvironment"></p>
                        </div>
                        <button class="collapsibleTheoryInfo">Referent object</button>
                        <div class="collapsibleContent">
                            <p id="theorySecurityReferentObject"></p>
                        </div>
                        <button class="collapsibleTheoryInfo">Agent</button>
                        <div class="collapsibleContent">
                            <p id="theoryAgent"></p>
                        </div>
                        <button class="collapsibleTheoryInfo">Threat actors</button>
                        <div class="collapsibleContent">
                            <p id="theoryThreatActors"></p>
                        </div>
                        <button class="collapsibleTheoryInfo">Source of resilience</button>
                        <div class="collapsibleContent">
                            <p id="theorySourceOfResilience"></p>
                        </div>
                        <button class="collapsibleTheoryInfo">Interventions</button>
                        <div class="collapsibleContent">
                            <p id="theoryInterventions"></p>
                        </div>
                        <button class="collapsibleTheoryInfo">Strategy</button>
                        <div class="collapsibleContent">
                            <p id="theoryStrategy"></p>
                        </div>
                        <button class="collapsibleTheoryInfo">Primary authors</button>
                        <div class="collapsibleContent">
                            <p id="theoryPrimaryAuthors"></p>
                        </div>
                        <button class="collapsibleTheoryInfo">Year</button>
                        <div class="collapsibleContent">
                            <p id="theoryYear"></p>
                        </div>
                        <button class="collapsibleTheoryInfo">Limitations</button>
                        <div class="collapsibleContent">
                            <p id="theoryLimitations"></p>
                        </div>
                        <button class="collapsibleTheoryInfo">Audience</button>
                        <div class="collapsibleContent">
                            <p id="theoryAudience"></p>
                        </div>
                        <button class="collapsibleTheoryInfo">Research drawn upon</button>
                        <div class="collapsibleContent">
                            <p id="theoryResearchDrawnUpon"></p>
                        </div>
                   </div>
           </aside>
      </div>
    <script>
        var selectedTheoryIDs = [
            <%theoryIDs.forEach(function(theoryID){%>
                "<%=theoryID.theoryID%>",
            <%});%>
        ];
        $.post("getorderedtheories",{
            ids : selectedTheoryIDs
        },
            function(data,status){
                render(data);
            });
        function render(data){
            var margin = {right: 30, left: 30};
            var width = document.getElementById('timelineContainer').offsetWidth;
            var height = document.getElementById('timelineContainer').offsetHeight;  
            var parseDate = d3.timeParse("%Y"); 
            var scaleX = d3.scaleLinear()
                .domain([data[0].theoryYear,data[data.length-1].theoryYear])
                .range([10, width-10]);
            
            var scaleColour = d3.scaleQuantize()
                .domain([getMinLogicID(data),getMaxLogicID(data)])
                .range(d3.schemePastel1);

            var currentTransform = scaleX; 
            var zoom = d3.zoom()
                .scaleExtent([1, 64])
                .translateExtent([[0, 0], [width, height]])
                .extent([[0, 0], [width, height]])
                .on("zoom", zoomed);

            var svg = d3.select(".timelineContainer")
                .append("svg")
                .attr("id","timeline")
                .attr("width", width)
                .attr("height", height)
                .style("pointer-events", "all")
            
            var g = svg.append("g");

            g.append("rect")
                .attr("x", 0)
                .attr("y", height/2)
                .attr("width", width)
                .attr("height", 10);
            
            var boundingRect = g.append("rect")
                .attr("x", 0)
                .attr("y", 0)
                .attr("width", width)
                .attr("height", height)
                .attr("fill", "none");

            g.selectAll("circle")
                .data(data)
                .enter()
                .append("circle")
                .attr("cx", function(d){
                    return scaleX(d.theoryYear);
                })
                .attr("cy", (height/2)+5)
                .attr("r", 10)
                .attr("fill", function(d){
                    return scaleColour(d.logicID); 
                })
                .on("mouseover", handleMouseOver)
                .on("mouseout", handleMouseOut)
                .on("click", function(d) {
                    $.post("gettheorydata",
                        {
                            id : d.theoryID
                        },
                        function(data,status){
                            for(field in data[0]){
                                $("#"+field).text(data[0][field]);
                            }
                        });
                });
            zoom(g);
            function handleMouseOver(d, i) { 
                d3.select(this).attr("fill", "orange");
                g.append("text")
                    .datum(d.theoryYear)
                    .attr("class", "textNames")
                    .attr("id", "t" + d.theoryYear + "-" + "-" + i)
                    .attr("x", function() { return currentTransform(d.theoryYear)-6; })
                    .attr("y", (height/2)+16)
                    .attr("transform", "rotate(90,"+(currentTransform(d.theoryYear)-6)+","+((height/2)+16)+")")
                    .text(d.theoryYear+" - "+d.theoryName); 
            }

            function handleMouseOut(d, i) {
                d3.select(this).attr("fill",scaleColour(d.logicID));
                d3.select("#t" + d.theoryYear + "-" + "-" + i).remove();  // Remove text location
            }

            function zoomed() {
                var t = d3.event.transform, xt = t.rescaleX(scaleX);
                currentTransform = xt;
                g.selectAll("circle")
                    .attr("cx", function(d){
                        return xt(d.theoryYear);
                    });
                g.selectAll(".textNames")
                    .attr("x", function(d){
                        return xt(d)-6;
                    })
                    .attr("transform", function(d){ 
                        return "rotate(90,"+(xt(d)-6)+","+((height/2)+16)+")";
                    });
            }
        }
        function getMaxLogicID(data){
            var maxID = data[0].logicID;
            for(row of data){
                if(row.logicID > maxID){
                    maxID = row.logicID;
                }
            }
            return maxID;
        }
        function getMinLogicID(data){
            var minID = data[0].logicID;
            for(row of data){
                if(row.logicID < minID){
                    minID = row.logicID;
                }
            }
            return minID;
        }
    </script>
    <script>
          var coll = document.getElementsByClassName("collapsibleTheoryInfo");
          var i;
          for (i = 0; i < coll.length; i++) {
              coll[i].addEventListener("click", function() {
                  this.classList.toggle("active");
                  var content = this.nextElementSibling;
                  if (content.style.maxHeight){
                      content.style.maxHeight = null;
                  } else {
                      content.style.maxHeight = content.scrollHeight + "px";
                  } 
              });
          }
    </script>
  </body>
</html>
